#!/bin/bash

set -euo pipefail

# Default values
source_dir="home"
install_dir="$HOME"
ln_args=()
quiet=false

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        --force)
            ln_args+=("--force")
            ;;
        --quiet)
            quiet=true
            ;;
        -*)
            echo "Unknown option: $1" >&2
            exit 1
            ;;
        *)
            # Break out of the loop when we hit positional args
            break
            ;;
    esac
    shift
done

# Handle positional arguments
if [[ $# -gt 0 ]]; then
    source_dir="$1"
    shift
    if [[ $# -gt 0 ]]; then
        install_dir="$1"
        shift
        # Check if there are more arguments (which would be too many)
        if [[ $# -gt 0 ]]; then
            echo "Error: Too many positional arguments. Expected at most 2: source_dir and install_dir." >&2
            exit 1
        fi
    else
        echo "Error: If source_dir is provided, install_dir must also be provided." >&2
        exit 1
    fi
fi

install_files=$(cd "${source_dir}" && find ./* -type f | sed -r 's#^[.]/##')

mkdir_args=()
ln_args_local=("${ln_args[@]}" -s)
diff_args=()

if [ "$quiet" = false ]; then
  mkdir_args+=(-v)
  ln_args_local+=(-v)
  diff_args+=(--report-identical-files)
fi

echo "${install_files}" | xargs dirname | sort | uniq | sed -r 's#^dot-#.#;s#^#'"${install_dir}"'/#' | xargs mkdir "${mkdir_args[@]}" -p

for f in ${install_files}; do
	target_file=$(echo "${install_dir}/$f" | sed 's#dot-#.#g')
	source_file="${PWD}/${source_dir}/$f"

	if ! [ -h "${target_file}" ] || [ "$(realpath "${target_file}")" != "${source_file}" ]; then
    if [[ ! "${target_file}" == "*/.dummy" ]]; then
      if [ "$quiet" = true ]; then
        ln "${ln_args_local[@]}" "${source_file}" "${target_file}" 2>/dev/null || diff "${diff_args[@]}" -U 3 "${source_file}" "${target_file}" || true
      else
        ln "${ln_args_local[@]}" "${source_file}" "${target_file}" || diff --report-identical-files "${source_file}" "${target_file}" || true
      fi
    fi
	fi
done
