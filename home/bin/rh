#!/bin/bash

set -e
set -x

export QT_DEVICE_PIXEL_RATIO=

RPROJ_FILE=$(R --vanilla --slave -e '
 if (requireNamespace("usethis", quietly = TRUE)) {
  library(usethis);
  options(usethis.quiet = TRUE, error = NULL);
  proj <- tryCatch(proj_get(), error = function(e) { create_project("../'$(basename $PWD)'", rstudio = TRUE); proj_get() });
  message(proj);
  file <- dir(proj, pattern = "[.]Rproj$", full.names = TRUE)[1];
  if (is.na(file)) {
    use_rstudio();
    file <- dir(proj, pattern = "[.]Rproj$", full.names = TRUE)[[1]];
  }
  cat(file);
 } else {
  cat(dir(getwd(), pattern = "[.]Rproj$", full.names = TRUE)[[1]])
 }
')
echo "Project file: ${RPROJ_FILE}"

RPROJ_PATH=$(dirname ${RPROJ_FILE})
echo "Project path: ${RPROJ_PATH}"

if ! [ -d .Rproj.user/.git ]; then
   git init .Rproj.user; ( cd .Rproj.user; git config user.name user; git config user.email user@email.com; git commit -m "Initial" --allow-empty; echo "*" > .git/info/exclude )
fi

# FIXME: use wmctrl -l -p and filter processes by working directory
win_id=$(wmctrl -l | grep 'RStudio$' | grep "$(basename ${RPROJ_PATH}) - " | tee /dev/stderr | cut -d " " -f 1)

if [ -n "$win_id" ]; then
  wmctrl -i -R ${win_id}
else
  false
fi || {
  # https://github.com/rstudio/rstudio/issues/4100#issuecomment-466223847
  R_LIBS=$(R --vanilla --slave -e 'cat(paste0(setdiff(.libPaths(), c(.Library, .Library.site)), collapse = ":"))')
  export R_LIBS

  rstudio "${RPROJ_FILE}" 2> /dev/null 1> /dev/null &
}
